From: Stephen Farrell <stephen.farrell@cs.tcd.ie>
Date: Thu, 21 Sep 2023 21:09:46 +0100
Subject: better test output

---
 tests/ech_tests.sh | 74 +++++++++++++++++++++++++++++++++++++-----------------
 1 file changed, 51 insertions(+), 23 deletions(-)

diff --git a/tests/ech_tests.sh b/tests/ech_tests.sh
index cb44917..c43c819 100755
--- a/tests/ech_tests.sh
+++ b/tests/ech_tests.sh
@@ -50,8 +50,8 @@ declare -A neither_targets=(
 # Variables that can be over-ridden from environment
 #
 
-# Top of curl test tree
-: ${CTOP:="$HOME/code/curl"}
+# Top of curl test tree, assume we're there 
+: ${CTOP:="."}
 
 # Plase to put test log output
 : ${LTOP:="$CTOP/tests/ech-log/"}
@@ -118,6 +118,7 @@ have_curl="no"
 have_dig="no"
 have_kdig="no"
 have_presout="no"
+have_portsblocked="no"
 
 # setup logging
 NOW=$(whenisitagain)
@@ -155,11 +156,17 @@ ossl_cnt=`$CURL -V 2> /dev/null | grep -c OpenSSL`
 if ((ossl_cnt == 1))
 then
     using_ossl="yes":
+    # setup access to our .so
+    export LD_LIBRARY_PATH=$OSSL
 fi
-wolf_cnt=`$CURL -V 2> /dev/null | grep -c WolfSSL`
+wolf_cnt=`$CURL -V 2> /dev/null | grep -c wolfSSL`
 if ((wolf_cnt == 1))
 then
     using_wolf="yes":
+    # for some reason curl+wolfSSL dislikes certs that are ok
+    # for browsers, so we'll test using "insecure" mode (-k)
+    # but that's ok here as we're only interested in ECH testing
+    CURL="$CURL -k"
 fi
 # check if we have dig and it knows https or not
 digcmd="dig +short"
@@ -175,7 +182,6 @@ then
     digcmd="kdig @$DOHSERVER +https +short"
 fi
 # see if our dig version knows HTTPS 
-echo "using |$digcmd|as dig command"
 dout=`$digcmd https defo.ie`
 if [[ $dout != "1 . "* ]]
 then
@@ -184,16 +190,25 @@ then
     then
         # we're good
         have_presout="yes"
-    elif [[ $dout == "\\# [0-9]"* ]]
-    then
-        have_presout="no"
-    else
-        have_presout="no"
     fi
 else
     have_presout="yes"
 fi
 
+# Check if ports other than 443 are blocked from this
+# vantage point (I run tests in a n/w where that's
+# sadly true sometimes;-)
+# echo "Checking if ports other than 443 are maybe blocked"
+not443testurl="https://draft-13.esni.defo.ie:9413/"
+timeout $tout $CURL $not443testurl >/dev/null 2>&1
+eres=$?
+if [[ "$eres" == "124" ]] 
+then
+    echo "Timeout running curl for $not443testurl" >>$logfile
+    echo "Timeout running curl for $not443testurl"
+    have_portsblocked="yes"
+fi
+
 echo "have_ossl: $have_ossl" >>$logfile
 echo "have_wolf: $have_wolf" >>$logfile
 echo "using_ossl: $using_ossl" >>$logfile
@@ -202,37 +217,48 @@ echo "have_curl: $have_curl" >>$logfile
 echo "have_dig: $have_dig" >>$logfile
 echo "have_kdig: $have_kdig" >>$logfile
 echo "have_presout: $have_presout" >>$logfile
+echo "have_portsblocked: $have_portsblocked" >>$logfile
 
-echo "have_ossl: $have_ossl" 
-echo "have_wolf: $have_wolf" 
-echo "using_ossl: $using_ossl" 
-echo "using_wolf: $using_wolf" 
-echo "have_curl: $have_curl" 
-echo "have_dig: $have_dig" 
-echo "have_kdig: $have_kdig" 
-echo "have_presout: $have_presout" 
+echo "curl: have $have_curl, cURL command: |$CURL|" 
+echo "ossl: have: $have_ossl, using: $using_ossl, wolf: have: $have_wolf, using: $using_wolf" 
+echo "dig: $have_dig, kdig: $have_kdig, HTTPS pres format: $have_presout dig command: |$digcmd|"
+echo "ports != 443 blocked: $have_portsblocked"
+
+if [[ "$have_curl" == "no" ]]
+then
+    echo "Can't proceed without curl - exiting"
+    exit 32
+fi
 
 allgood="yes"
 for targ in "${!ech_targets[@]}"
 do
     host=$(hostport2host $targ)
     port=$(hostport2port $targ)
+    if [[ "$port" != "443" && "$have_portsblocked" == "yes" ]]
+    then
+        echo "Skipping $targ as ports != 443 seem blocked"
+        continue
+    fi
     path=${ech_targets[$targ]}
     turl="https://$host:$port/$path"
     echo "Basic check for $turl"
     echo "" >>$logfile
     echo "Basic check for $turl" >>$logfile
-    timeout $tout $CURL -vvv --ech-hard $turl >>$logfile
+    timeout $tout $CURL -vvv --ech-hard $turl >>$logfile 2>&1
     eres=$?
     if [[ "$eres" == "124" ]] 
     then
         allgood="no"
-        echo "Timeout running echcli.sh for $host:$port/$path" >>$logfile
+        echo "Timeout for $turl" >>$logfile
+        echo -e "\tTimeout for $turl" >>$logfile
+        echo "Timeout running curl for $host:$port/$path" >>$logfile
     fi
     if [[ "$eres" != "0" ]] 
     then
         allgood="no"
-        echo "Error ($eres) from echcli.sh for $host:$port/$path" >>$logfile
+        echo "Error ($eres) for $turl" >>$logfile
+        echo -e "\tError ($eres) for $turl"
     fi
     echo "" >>$logfile
 done
@@ -240,13 +266,15 @@ done
 END=$(whenisitagain)
 echo "Finished $0 at $END"  >>$logfile
 echo "-----" >>$logfile
-cd -
 
 if [[ "$allgood" == "yes" ]]
 then
     echo "Finished $0 at $END"
     echo "All good, log in $logfile"
     exit 0
+else
+    echo "Finished $0 at $END"
+    echo "NOT all good, log in $logfile"
 fi
 
 # send a mail to root (will be fwd'd) but just once every 24 hours
@@ -297,10 +325,10 @@ exit 2
         if [[ "$eres" == "124" ]] 
         then
             allgood="no"
-            echo "Timeout running echcli.sh for $host:$port/$path" >>$logfile
+            echo "Timeout running curl for $host:$port/$path" >>$logfile
         fi
         if [[ "$eres" != "0" ]] 
         then
             allgood="no"
-            echo "Error ($eres) from echcli.sh for $host:$port/$path" >>$logfile
+            echo "Error ($eres) from curl for $host:$port/$path" >>$logfile
         fi
