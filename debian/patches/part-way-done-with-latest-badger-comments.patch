From: Stephen Farrell <stephen.farrell@cs.tcd.ie>
Date: Tue, 24 Oct 2023 01:58:34 +0100
Subject: part way done with latest @badger comments

---
 docs/cmdline-opts/ech.d         |  2 +-
 docs/libcurl/opts/CURLOPT_ECH.3 | 11 +++++------
 lib/doh.c                       |  8 ++------
 3 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/docs/cmdline-opts/ech.d b/docs/cmdline-opts/ech.d
index 2b2b7d5..b33f00a 100644
--- a/docs/cmdline-opts/ech.d
+++ b/docs/cmdline-opts/ech.d
@@ -32,4 +32,4 @@ value for true/false/hard/grease will be used, as will the most-recent
 those were provided.
 
 ECH only works with TLS 1.3 and also requires using
-DoH or else providing an ECHConfigList on the command line.
+DoH or providing an ECHConfigList on the command line.
diff --git a/docs/libcurl/opts/CURLOPT_ECH.3 b/docs/libcurl/opts/CURLOPT_ECH.3
index 3b180b0..7007bba 100644
--- a/docs/libcurl/opts/CURLOPT_ECH.3
+++ b/docs/libcurl/opts/CURLOPT_ECH.3
@@ -24,7 +24,7 @@
 .\"
 .TH CURLOPT_ECH 3 "30 Sep 2023" libcurl libcurl
 .SH NAME
-CURLOPT_ECH \- control configuration for Encrypted Client Hello
+CURLOPT_ECH \- configuration for Encrypted Client Hello
 .SH SYNOPSIS
 .nf
 #include <curl/curl.h>
@@ -45,15 +45,14 @@ Instructs client to attempt ECH, if possible, but to not fail if attempting ECH
 Instructs client to attempt ECH and fail if if attempting ECH is not possible.
 .IP ecl:<base64-value>
 If the string starts with "ecl:" then the remainder of the string should be a base64-encoded
-ECHConfigList that will be used for ECH rather than attempting to download such a value from
+ECHConfigList that is used for ECH rather than attempting to download such a value from
 the DNS.
 .IP pn:<name>
 If the string starts with "pn:" then the remainder of the string should be a DNS/host name
-that will be used to over-ride the public_name field of the ECHConfigList that will be used
+that is used to over-ride the public_name field of the ECHConfigList that will be used
 for ECH.
 .SH DEFAULT
-There is no default value, meaning ECH is disabled if no
-configuration is supplied.
+NULL, meaning ECH is disabled.
 .SH PROTOCOLS
 TLS, and requires TLS1.3.
 .SH EXAMPLE
@@ -67,7 +66,7 @@ if(curl) {
 }
 .fi
 .SH AVAILABILITY
-Added in 8.4.0
+Added in 8.6.0
 .SH RETURN VALUE
 Returns CURLE_OK on success or CURLE_OUT_OF_MEMORY if there was insufficient heap space.
 .SH "SEE ALSO"
diff --git a/lib/doh.c b/lib/doh.c
index bf53e54..87367e0 100644
--- a/lib/doh.c
+++ b/lib/doh.c
@@ -42,16 +42,12 @@
 #include "curl_printf.h"
 #include "curl_memory.h"
 #include "memdebug.h"
-#ifdef USE_HTTPSRR
-# include "escape.h"
-#endif
+#include "escape.h"
 
 #define DNS_CLASS_IN 0x01
 
-#ifdef USE_HTTPSRR
 /* local_print_buf truncates if the hex string will be more than this */
-# define LOCAL_PB_HEXMAX 400
-#endif
+#define LOCAL_PB_HEXMAX 400
 
 #ifndef CURL_DISABLE_VERBOSE_STRINGS
 static const char * const errors[]={
